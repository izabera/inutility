getopt uses the same parser as inutility of course, so it handles unknown
options, options with missing args, --help, --version, --, bytes and numbers

it accepts these options:
-d description
-n 'program name'   (default: "programname")
-h 'help string'
-v 'version string'
-l argleast
-L arglessthan
-u                  (unqouted output, by default it's quoted for posix sh)

$ inutility getopt abc:d: -abbacus -d hello world! ain\'t no place like \$HOME
 -a -b -b -a -c us -d hello -- 'world!' 'ain'\''t' no place like '$HOME'

$ inutility getopt -u abc:d: -abbacus -d hello world! ain\'t no place like \$HOME
 -a -b -b -a -c us -d hello -- world! ain't no place like $HOME

$ inutility getopt 'a*b|#' -a 12M -b 34M -56 -78 -- -90
 -a 12582912 -b 34000000 -56 -78 -- -90

$ inutility getopt abc_ -a -b -10 -a
 -a -b -- -10 -a

$ inutility getopt -n hal -v 9000 -d 'pod bay door opener' 'ab:c*d|#' --help
hal: pod bay door opener
hal [-a] [-b arg] [-c byte] [-d num] [-num] [arg...]

$ inutility getopt -n hal -v 9000 -d 'pod bay door opener' 'ab:c*d|#' --version
9000


it returns 152 (-'h') for --help and 138 (-'v') for --version
example usage:

#!/bin/bash
opts=$(inutility getopt -n head "qvz#c*n|" "$@")
case $? in
        0)        ;;
  152|138) exit 0 ;;
        *) exit 1 ;;
esac
eval set -- "$opts"
while (($#)); do
	case $1 in
    -q) quietmode=1 ;;
    -v) quietmode=0 ;;
    -c) bytes=$2; shift ;;
    -n) lines=$2; shift ;;
    --) shift; break ;;
	esac
  shift
done
printf "quietmode: %d\n" "$quietmode"
printf "bytes: %d\n" "$bytes"
printf "lines: %d\n" "$lines"
printf "args: "
printf "<%s> " "$@"
echo
